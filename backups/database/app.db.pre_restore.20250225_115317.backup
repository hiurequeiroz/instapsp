BEGIN TRANSACTION;
CREATE TABLE comment (
	id INTEGER NOT NULL, 
	text TEXT NOT NULL, 
	created_at DATETIME, 
	user_id INTEGER NOT NULL, 
	post_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES user (id), 
	FOREIGN KEY(post_id) REFERENCES post (id)
);
CREATE TABLE "like" (
	id INTEGER NOT NULL, 
	created_at DATETIME, 
	user_id INTEGER NOT NULL, 
	post_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_user_post_like UNIQUE (user_id, post_id), 
	FOREIGN KEY(user_id) REFERENCES user (id), 
	FOREIGN KEY(post_id) REFERENCES post (id)
);
CREATE TABLE post (
	id INTEGER NOT NULL, 
	image_path VARCHAR(150) NOT NULL, 
	caption TEXT, 
	created_at DATETIME, 
	user_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES user (id)
);
CREATE TABLE tag (
	id INTEGER NOT NULL, 
	post_id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_post_user_tag UNIQUE (post_id, user_id), 
	FOREIGN KEY(post_id) REFERENCES post (id), 
	FOREIGN KEY(user_id) REFERENCES user (id)
);
CREATE TABLE timeline_preference (
	id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	sort_by VARCHAR(20), 
	created_at DATETIME, 
	updated_at DATETIME, 
	PRIMARY KEY (id), 
	UNIQUE (user_id), 
	FOREIGN KEY(user_id) REFERENCES user (id)
);
CREATE TABLE user (
	id INTEGER NOT NULL, 
	username VARCHAR(80) NOT NULL, 
	password_hash VARCHAR(120) NOT NULL, 
	reset_code VARCHAR(8), 
	reset_code_expiry DATETIME, 
	is_admin BOOLEAN, 
	PRIMARY KEY (id), 
	UNIQUE (username), 
	UNIQUE (reset_code)
);
CREATE TABLE visibility (
	id INTEGER NOT NULL, 
	post_id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	is_visible BOOLEAN, 
	created_at DATETIME, 
	PRIMARY KEY (id), 
	CONSTRAINT unique_post_user_visibility UNIQUE (post_id, user_id), 
	FOREIGN KEY(post_id) REFERENCES post (id), 
	FOREIGN KEY(user_id) REFERENCES user (id)
);
COMMIT;
